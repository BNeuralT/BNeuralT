{"n_data_name": "ionosphere.csv",
"n_problem_type": "Classification",
"n_should_normalize_data": "true",
"n_scale": "[0.0, 1.0]",
"n_data_input_names": "[Pulse1, Pulse3, Pulse4, Pulse5, Pulse6, Pulse7, Pulse8, Pulse9, Pulse10, Pulse11, Pulse12, Pulse13, Pulse14, Pulse15, Pulse16, Pulse17, Pulse18, Pulse19, Pulse20, Pulse21, Pulse22, Pulse23, Pulse24, Pulse25, Pulse26, Pulse27, Pulse28, Pulse29, Pulse30, Pulse31, Pulse32, Pulse33, Pulse34]",
"n_max_input_attr": "33",
"n_data_target_names": "[b, g]",
"n_max_target_attr": "2",
"n_validation_method": "holdout",
"n_training_set_size": "0.8",
"n_validation_set_size": "0.0",
"n_validation_folds": "2",
"n_max_children": "5",
"n_max_depth": "5",
"n_prob_of_int_leaf_gen": "0.4",
"n_fun_range": "[0.01, 1.0]",
"n_weight_range": "[0.0, 1.0]",
"n_fun_type": "sigmoid",
"n_out_fun_type": "sigmoid",
"n_max_str_itrations": "1000",
"n_max_str_population": "1000",
"n_algo_structure": "gp",
"n_optimization": "MIN",
"n_max_objectives": "2",
"n_division": "10",
"n_prob_crossover": "0.8",
"n_prob_mutation": "0.2",
"n_param_optimizer": "gd",
"n_param_opt_max_itr": "500",
"n_algo_param": "rmsprop",
"n_mh_pop_size": "100",
"n_gd_eval_mode": "stochastic",
"n_gd_precision": "1.0E-8",
"n_gd_eta": "0.1",
"n_gd_gamma": "0.9",
"n_gd_eps": "1.0E-8",
"n_gd_beta": "0.9",
"n_gd_beta1": "0.9",
"n_gd_beta2": "0.9",
"n_train_error": "0.06428571428571428",
"n_train_prec": "[0.9772727272727273, 0.9166666666666666]",
"n_train_recall": "[0.8431372549019608, 0.9887640449438202]",
"n_train_spec": "[0.9887640449438202, 0.8431372549019608]",
"n_train_tp": "[86, 176]",
"n_train_fp": "[2, 16]",
"n_train_fn": "[16, 2]",
"n_train_tn": "[176, 86]",
"n_test_error": "0.028169014084507005",
"n_test_prec": "[1.0, 0.9591836734693877]",
"n_test_recall": "[0.9166666666666666, 1.0]",
"n_test_spec": "[1.0, 0.9166666666666666]",
"n_test_tp": "[22, 47]",
"n_test_fp": "[0, 2]",
"n_test_fn": "[2, 0]",
"n_test_tn": "[47, 22]",
"n_tree_size": "81",
"n_data_rand_secquence": "[80, 116, 32, 203, 63, 17, 85, 60, 105, 161, 138, 170, 310, 83, 185, 76, 305, 197, 271, 132, 77, 341, 287, 97, 106, 142, 233, 177, 211, 302, 113, 275, 152, 173, 18, 92, 292, 334, 0, 78, 87, 207, 141, 146, 151, 66, 73, 240, 348, 125, 8, 247, 235, 339, 295, 58, 349, 6, 53, 343, 259, 284, 86, 180, 62, 169, 314, 338, 204, 289, 153, 71, 345, 263, 111, 297, 306, 291, 194, 110, 344, 256, 330, 11, 158, 210, 222, 36, 135, 228, 246, 279, 311, 283, 239, 255, 224, 172, 70, 42, 328, 166, 43, 20, 162, 213, 59, 40, 217, 57, 273, 236, 14, 324, 27, 257, 148, 98, 21, 264, 248, 5, 45, 72, 318, 277, 75, 90, 285, 301, 201, 69, 335, 226, 94, 119, 147, 243, 331, 64, 168, 7, 84, 192, 99, 121, 22, 102, 179, 323, 288, 117, 165, 300, 19, 223, 118, 88, 112, 140, 131, 276, 52, 47, 315, 91, 178, 100, 307, 134, 155, 167, 81, 41, 189, 250, 252, 115, 188, 175, 237, 187, 186, 55, 290, 1, 56, 9, 139, 254, 241, 316, 114, 225, 4, 61, 191, 79, 321, 205, 350, 199, 15, 219, 129, 174, 159, 136, 96, 260, 3, 2, 313, 38, 299, 293, 214, 280, 44, 89, 309, 101, 266, 320, 65, 128, 326, 144, 182, 200, 109, 74, 269, 262, 337, 183, 245, 190, 164, 253, 282, 270, 251, 308, 218, 35, 120, 33, 294, 25, 238, 265, 95, 184, 123, 272, 209, 325, 104, 230, 108, 196, 242, 156, 127, 195, 268, 103, 157, 29, 23, 49, 340, 274, 30, 198, 124, 48, 51, 154, 208, 304, 281, 298, 26, 160, 68, 347, 220, 212, 171, 137, 206, 327, 50, 322, 202, 346, 258, 163, 181, 303, 39, 286, 37, 16, 28, 216, 319, 93, 342, 336, 261, 46, 10, 133, 13, 122, 296, 143, 54, 176, 215, 244, 145, 149, 221, 312, 332, 229, 150, 82, 34, 267, 232, 333, 227, 249, 329, 107, 12, 24, 231, 31, 67, 193, 278, 234, 126, 130, 317]",
"n_train_time_sec": "35601.461"
}