{"n_data_name": "ionosphere.csv",
"n_problem_type": "Classification",
"n_should_normalize_data": "true",
"n_scale": "[0.0, 1.0]",
"n_data_input_names": "[Pulse1, Pulse3, Pulse4, Pulse5, Pulse6, Pulse7, Pulse8, Pulse9, Pulse10, Pulse11, Pulse12, Pulse13, Pulse14, Pulse15, Pulse16, Pulse17, Pulse18, Pulse19, Pulse20, Pulse21, Pulse22, Pulse23, Pulse24, Pulse25, Pulse26, Pulse27, Pulse28, Pulse29, Pulse30, Pulse31, Pulse32, Pulse33, Pulse34]",
"n_max_input_attr": "33",
"n_data_target_names": "[b, g]",
"n_max_target_attr": "2",
"n_validation_method": "holdout",
"n_training_set_size": "0.8",
"n_validation_set_size": "0.0",
"n_validation_folds": "2",
"n_max_children": "5",
"n_max_depth": "5",
"n_prob_of_int_leaf_gen": "0.4",
"n_fun_range": "[0.01, 1.0]",
"n_weight_range": "[0.0, 1.0]",
"n_fun_type": "sigmoid",
"n_out_fun_type": "sigmoid",
"n_max_str_itrations": "1000",
"n_max_str_population": "1000",
"n_algo_structure": "gp",
"n_optimization": "MIN",
"n_max_objectives": "2",
"n_division": "10",
"n_prob_crossover": "0.8",
"n_prob_mutation": "0.2",
"n_param_optimizer": "gd",
"n_param_opt_max_itr": "500",
"n_algo_param": "rmsprop",
"n_mh_pop_size": "100",
"n_gd_eval_mode": "stochastic",
"n_gd_precision": "1.0E-8",
"n_gd_eta": "0.1",
"n_gd_gamma": "0.9",
"n_gd_eps": "1.0E-8",
"n_gd_beta": "0.9",
"n_gd_beta1": "0.9",
"n_gd_beta2": "0.9",
"n_train_error": "0.09642857142857142",
"n_train_prec": "[0.8829787234042553, 0.9139784946236559]",
"n_train_recall": "[0.8383838383838383, 0.9392265193370166]",
"n_train_spec": "[0.9392265193370166, 0.8383838383838383]",
"n_train_tp": "[83, 170]",
"n_train_fp": "[11, 16]",
"n_train_fn": "[16, 11]",
"n_train_tn": "[170, 83]",
"n_test_error": "0.014084507042253502",
"n_test_prec": "[0.9642857142857143, 1.0]",
"n_test_recall": "[1.0, 0.9772727272727273]",
"n_test_spec": "[0.9772727272727273, 1.0]",
"n_test_tp": "[27, 43]",
"n_test_fp": "[1, 0]",
"n_test_fn": "[0, 1]",
"n_test_tn": "[43, 27]",
"n_tree_size": "230",
"n_data_rand_secquence": "[95, 222, 295, 103, 206, 280, 256, 38, 61, 261, 143, 301, 19, 172, 25, 105, 252, 321, 163, 150, 125, 127, 138, 51, 265, 171, 237, 98, 186, 42, 77, 183, 175, 306, 196, 33, 251, 137, 272, 142, 218, 99, 117, 200, 0, 298, 262, 136, 102, 80, 340, 257, 69, 174, 180, 107, 106, 296, 322, 269, 197, 303, 255, 46, 339, 181, 168, 148, 120, 288, 239, 299, 232, 167, 27, 236, 128, 28, 41, 192, 70, 88, 158, 287, 315, 18, 75, 229, 325, 73, 211, 217, 3, 45, 275, 101, 54, 283, 312, 185, 227, 313, 230, 114, 330, 247, 212, 130, 35, 244, 155, 274, 116, 81, 268, 210, 324, 121, 297, 159, 9, 302, 44, 15, 278, 190, 331, 267, 320, 14, 140, 202, 7, 21, 270, 345, 327, 83, 47, 293, 115, 4, 245, 176, 241, 129, 60, 304, 108, 160, 277, 104, 50, 214, 203, 342, 317, 285, 34, 231, 341, 191, 308, 248, 240, 39, 132, 246, 62, 2, 30, 134, 124, 68, 328, 162, 8, 226, 338, 84, 243, 65, 123, 309, 23, 238, 209, 264, 113, 122, 135, 67, 149, 335, 188, 220, 76, 194, 90, 26, 279, 195, 146, 189, 294, 213, 260, 166, 31, 57, 145, 254, 187, 131, 85, 97, 157, 221, 249, 305, 144, 225, 205, 334, 289, 64, 207, 92, 204, 109, 344, 223, 72, 258, 273, 164, 93, 32, 284, 1, 348, 40, 5, 271, 198, 263, 133, 337, 286, 170, 151, 347, 329, 282, 165, 169, 242, 235, 259, 177, 16, 323, 24, 216, 292, 161, 20, 139, 250, 63, 343, 48, 173, 37, 110, 58, 22, 118, 91, 154, 13, 36, 141, 89, 215, 311, 112, 219, 332, 314, 119, 319, 78, 350, 333, 233, 17, 11, 126, 193, 184, 316, 281, 253, 86, 53, 266, 74, 234, 291, 66, 10, 82, 100, 87, 6, 228, 79, 56, 290, 326, 201, 349, 29, 276, 346, 55, 94, 12, 199, 43, 179, 153, 310, 71, 182, 318, 336, 224, 49, 96, 178, 208, 307, 156, 52, 59, 111, 300, 152, 147]",
"n_train_time_sec": "112284.494"
}