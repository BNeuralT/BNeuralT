{"n_data_name": "ionosphere.csv",
"n_problem_type": "Classification",
"n_should_normalize_data": "true",
"n_scale": "[0.0, 1.0]",
"n_data_input_names": "[Pulse1, Pulse3, Pulse4, Pulse5, Pulse6, Pulse7, Pulse8, Pulse9, Pulse10, Pulse11, Pulse12, Pulse13, Pulse14, Pulse15, Pulse16, Pulse17, Pulse18, Pulse19, Pulse20, Pulse21, Pulse22, Pulse23, Pulse24, Pulse25, Pulse26, Pulse27, Pulse28, Pulse29, Pulse30, Pulse31, Pulse32, Pulse33, Pulse34]",
"n_max_input_attr": "33",
"n_data_target_names": "[b, g]",
"n_max_target_attr": "2",
"n_validation_method": "holdout",
"n_training_set_size": "0.8",
"n_validation_set_size": "0.0",
"n_validation_folds": "2",
"n_max_children": "5",
"n_max_depth": "5",
"n_prob_of_int_leaf_gen": "0.4",
"n_fun_range": "[0.01, 1.0]",
"n_weight_range": "[0.0, 1.0]",
"n_fun_type": "sigmoid",
"n_out_fun_type": "sigmoid",
"n_max_str_itrations": "1000",
"n_max_str_population": "1000",
"n_algo_structure": "gp",
"n_optimization": "MIN",
"n_max_objectives": "2",
"n_division": "10",
"n_prob_crossover": "0.8",
"n_prob_mutation": "0.2",
"n_param_optimizer": "gd",
"n_param_opt_max_itr": "500",
"n_algo_param": "rmsprop",
"n_mh_pop_size": "100",
"n_gd_eval_mode": "stochastic",
"n_gd_precision": "1.0E-8",
"n_gd_eta": "0.1",
"n_gd_gamma": "0.9",
"n_gd_eps": "1.0E-8",
"n_gd_beta": "0.9",
"n_gd_beta1": "0.9",
"n_gd_beta2": "0.9",
"n_train_error": "0.16428571428571426",
"n_train_prec": "[0.7831325301204819, 0.8578680203045685]",
"n_train_recall": "[0.6989247311827957, 0.9037433155080213]",
"n_train_spec": "[0.9037433155080213, 0.6989247311827957]",
"n_train_tp": "[65, 169]",
"n_train_fp": "[18, 28]",
"n_train_fn": "[28, 18]",
"n_train_tn": "[169, 65]",
"n_test_error": "0.11267605633802813",
"n_test_prec": "[1.0, 0.8260869565217391]",
"n_test_recall": "[0.7575757575757576, 1.0]",
"n_test_spec": "[1.0, 0.7575757575757576]",
"n_test_tp": "[25, 38]",
"n_test_fp": "[0, 8]",
"n_test_fn": "[8, 0]",
"n_test_tn": "[38, 25]",
"n_tree_size": "49",
"n_data_rand_secquence": "[73, 102, 270, 126, 245, 109, 202, 193, 283, 134, 154, 343, 92, 147, 233, 26, 349, 161, 288, 194, 98, 216, 188, 261, 315, 145, 209, 39, 232, 137, 225, 227, 298, 28, 249, 117, 311, 87, 243, 90, 162, 11, 77, 131, 133, 296, 86, 173, 122, 274, 299, 302, 76, 219, 108, 331, 31, 211, 6, 141, 139, 138, 146, 130, 312, 327, 127, 55, 272, 8, 27, 176, 59, 252, 38, 65, 96, 266, 10, 114, 24, 45, 21, 168, 205, 280, 332, 13, 281, 143, 346, 338, 348, 304, 23, 50, 326, 267, 5, 303, 276, 222, 213, 119, 289, 83, 16, 180, 62, 286, 229, 18, 124, 319, 325, 198, 116, 140, 246, 43, 3, 199, 118, 113, 97, 151, 42, 257, 264, 250, 329, 93, 178, 342, 181, 242, 321, 172, 335, 320, 251, 163, 2, 221, 230, 53, 297, 169, 9, 165, 157, 341, 207, 278, 70, 95, 29, 268, 300, 189, 262, 231, 344, 313, 152, 30, 34, 290, 295, 287, 74, 282, 187, 337, 166, 91, 214, 104, 25, 129, 156, 316, 339, 308, 107, 197, 155, 239, 61, 37, 123, 75, 328, 171, 196, 112, 1, 57, 121, 195, 132, 238, 203, 175, 324, 223, 191, 340, 291, 236, 218, 260, 100, 148, 12, 149, 82, 144, 41, 347, 345, 182, 318, 212, 253, 60, 79, 22, 17, 159, 72, 33, 19, 256, 78, 294, 88, 350, 277, 167, 204, 310, 200, 241, 110, 32, 69, 115, 224, 192, 269, 333, 177, 285, 101, 174, 66, 322, 48, 237, 208, 263, 103, 201, 284, 105, 309, 71, 36, 128, 307, 111, 293, 120, 164, 64, 206, 135, 68, 305, 215, 334, 125, 14, 84, 271, 81, 314, 323, 63, 58, 220, 35, 51, 330, 0, 179, 301, 99, 52, 44, 67, 15, 56, 226, 153, 94, 46, 186, 40, 106, 259, 49, 244, 254, 247, 234, 190, 89, 248, 210, 142, 235, 4, 240, 160, 228, 184, 275, 150, 170, 273, 7, 54, 185, 317, 136, 158, 279, 306, 85, 265, 255, 20, 183, 336, 292, 258, 80, 47, 217]",
"n_train_time_sec": "25134.212"
}